:py:mod:`landcover_assignment.resource_manager.scenario_data_fetcher`
=====================================================================

.. py:module:: landcover_assignment.resource_manager.scenario_data_fetcher

.. autoapi-nested-parse::

   Scenario Data Fetcher Documentation
   ====================================

   The ``ScenarioDataFetcher`` class is designed to extract specific pieces of information from a scenario dataset. It enables the retrieval of land use proportions, harvest proportions, afforestation end years, and other scenario-specific data.

   .. class:: ScenarioDataFetcher(scenario_data, validate_on_init=False)

      Initializes the ScenarioDataFetcher class with a pandas DataFrame containing scenario data.

      :param scenario_data: A pandas DataFrame containing various scenarios and their respective data points.
      :param validate_on_init: A boolean indicating whether to validate proportions on initialization.

      **Methods**

      .. method:: get_wetland_proportion(scenario)

         Retrieves the proportion of wetland area for a specified scenario.

         :param scenario: The scenario identifier as a string.
         :return: The wetland proportion as a float.
         :rtype: float

      .. method:: get_forest_proportion(scenario)

         Retrieves the proportion of forest area for a specified scenario.

         :param scenario: The scenario identifier as a string.
         :return: The forest proportion as a float.
         :rtype: float

      .. method:: get_cropland_proportion(scenario)

         Retrieves the proportion of cropland area for a specified scenario.

         :param scenario: The scenario identifier as a string.
         :return: The cropland proportion as a float.
         :rtype: float

      .. method:: get_conifer_proportion(scenario)

         Retrieves the proportion of conifer trees for a specified scenario.

         :param scenario: The scenario identifier as a string.
         :return: The conifer proportion as a float.
         :rtype: float

      .. method:: get_broadleaf_proportion(scenario)

         Retrieves the proportion of broadleaf trees for a specified scenario.

         :param scenario: The scenario identifier as a string.
         :return: The broadleaf proportion as a float.
         :rtype: float

      .. method:: get_broadleaf_harvest_proportion(scenario)

         Retrieves the harvest proportion of broadleaf trees for a specified scenario.

         :param scenario: The scenario identifier as a string.
         :return: The broadleaf harvest proportion as a float.
         :rtype: float

      .. method:: get_conifer_harvest_proportion(scenario)

         Retrieves the harvest proportion of conifer trees for a specified scenario.

         :param scenario: The scenario identifier as a string.
         :return: The conifer harvest proportion as a float.
         :rtype: float

      .. method:: get_conifer_thinned_proportion(scenario)

         Retrieves the thinned proportion of conifer trees for a specified scenario.

         :param scenario: The scenario identifier as a string.
         :return: The conifer thinned proportion as a float.
         :rtype: float

      .. method:: get_afforest_end_year(scenario)

         Retrieves the end year for afforestation activities for a specified scenario.

         :param scenario: The scenario identifier as a string.
         :return: The afforestation end year as an integer.
         :rtype: int

      .. method:: get_catchment_name()

         Retrieves the name of the catchment area defined in the scenario data.

         :return: The catchment name as a string.
         :rtype: str

      .. method:: get_scenario_list()

         Retrieves a list of all scenarios present in the scenario data.

         :return: A list of scenario identifiers.
         :rtype: list

      .. method:: validate_proportions(scenario)

         Validates that the sum of cropland, forestland, and rewetted area proportions equals 1 for a specified scenario.

         :param scenario: The scenario identifier as a string.
         :raises ValueError: If the proportions do not sum to 1.

      .. method:: validate_all_proportions()

         Validates that the proportions for all scenarios in the dataset sum to 1.

         :raises ValueError: If any scenario has invalid proportions.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   landcover_assignment.resource_manager.scenario_data_fetcher.ScenarioDataFetcher




.. py:class:: ScenarioDataFetcher(scenario_data, validate_on_init=False)


   .. py:method:: validate_forest_thinning_and_harvest_proportions(scenario)

      Validates that the sum of conifer and broadleaf tree proportions equals 1.

      :param scenario: The scenario identifier to validate.
      :type scenario: int or str
      :raises ValueError: If the proportions do not sum to 1.


   .. py:method:: validate_all_forest_thinning_and_harvest_proportions()

      Validates that the proportions for all scenarios in the dataset sum to 1.

      :raises ValueError: If any scenario has invalid proportions.


   .. py:method:: validate_species_proportions(scenario)

      Validates that the sum of conifer and broadleaf tree proportions equals 1.

      :param scenario: The scenario identifier to validate.
      :type scenario: int or str
      :raises ValueError: If the proportions do not sum to 1.


   .. py:method:: validate_all_species_proportions()

      Validates that the proportions for all scenarios in the dataset sum to 1.

      :raises ValueError: If any scenario has invalid proportions.


   .. py:method:: validate_landuse_proportions(scenario)

      Validates that the sum of cropland, forestland, and rewetted area proportions equals 1.

      :param scenario: The scenario identifier to validate.
      :type scenario: int or str
      :raises ValueError: If the proportions do not sum to 1.


   .. py:method:: validate_all_spared_area_proportions()

      Validates that the proportions for all scenarios in the dataset sum to 1.

      :raises ValueError: If any scenario has invalid proportions.


   .. py:method:: get_rewetted_proportion(scenario)

      Retrieves the proportion of rewetted area for a specified scenario.

      :param scenario: The scenario identifier as a string.
      :return: The rewetted area proportion as a float.
      :rtype: float


   .. py:method:: get_forest_proportion(scenario)

      Retrieves the proportion of forest area for a specified scenario.

      :param scenario: The scenario identifier as a string.
      :return: The forest proportion as a float.
      :rtype: float


   .. py:method:: get_cropland_proportion(scenario)

      Retrieves the proportion of cropland area for a specified scenario.

      :param scenario: The scenario identifier as a string.
      :return: The cropland proportion as a float.
      :rtype: float


   .. py:method:: get_conifer_proportion(scenario)

      Retrieves the proportion of conifer trees for a specified scenario.

      :param scenario: The scenario identifier as a string.
      :return: The conifer proportion as a float.
      :rtype: float


   .. py:method:: get_broadleaf_proportion(scenario)

      Retrieves the proportion of broadleaf trees for a specified scenario.

      :param scenario: The scenario identifier as a string.
      :return: The broadleaf proportion as a float.
      :rtype: float


   .. py:method:: get_broadleaf_harvest_proportion(scenario)

      Retrieves the harvest proportion of broadleaf trees for a specified scenario.

      :param scenario: The scenario identifier as a string.
      :return: The broadleaf harvest proportion as a float.
      :rtype: float


   .. py:method:: get_conifer_harvest_proportion(scenario)

      Retrieves the harvest proportion of conifer trees for a specified scenario.

      :param scenario: The scenario identifier as a string.
      :return: The conifer harvest proportion as a float.
      :rtype: float


   .. py:method:: get_conifer_thinned_proportion(scenario)

      Retrieves the thinned proportion of conifer trees for a specified scenario.

      :param scenario: The scenario identifier as a string.
      :return: The conifer thinned proportion as a float.
      :rtype: float


   .. py:method:: get_afforest_end_year(scenario)

      Retrieves the end year for afforestation activities for a specified scenario.

      :param scenario: The scenario identifier as a string.
      :return: The afforestation end year as an integer.
      :rtype: int


   .. py:method:: get_catchment_name()

      Retrieves the name of the catchment area defined in the scenario data.

      :return: The catchment name as a string.
      :rtype: str


   .. py:method:: get_scenario_list()

      Retrieves a list of all scenarios present in the scenario data.

      :return: A list of scenario identifiers.
      :rtype: list



